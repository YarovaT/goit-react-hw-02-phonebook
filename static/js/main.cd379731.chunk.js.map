{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputOnChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","className","s","formGroup","type","pattern","title","required","onChange","button","Component","ContactItem","onClick","ContactList","contacts","onDeleteContact","map","id","listItem","Filter","App","initialContacts","filter","contactId","uuidv4","formSubmitHandler","newContact","contact","includes","alert","addContact","prevState","seachContactByName","contactName","getVisibleContacts","normalizedFilter","toLowerCase","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,OAAS,4BAA4B,SAAW,gC,oBCAlED,EAAOC,QAAU,CAAC,UAAY,+BAA+B,aAAa,gCAAgC,OAAS,8B,ifCkEpGC,E,4MAhEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,oBAAsB,SAAAC,GACpB,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,SAAS,EAAKZ,OAEzB,EAAKa,S,EAGPA,MAAQ,WACN,EAAKN,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBY,KAAKd,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAMU,SAAUE,KAAKN,aAArB,UACE,sBAAKO,UAAWC,IAAEC,UAAlB,UACE,yCACO,IACL,uBACEC,KAAK,OACLjB,KAAK,OACLK,MAAOL,EACPkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUR,KAAKX,yBAInB,2CACS,IACP,uBACEe,KAAK,MACLjB,KAAK,SACLK,MAAOJ,EACPiB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUR,KAAKX,4BAKrB,wBAAQe,KAAK,SAASH,UAAWC,IAAEO,OAAnC,gC,GAzDkBC,a,gBCmBXC,EAjBK,SAAC,GAA+B,IAA7BxB,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQwB,EAAc,EAAdA,QACnC,OACE,qCACGzB,EADH,KACWC,EACT,wBAAQa,UAAWC,IAAEO,OAAQL,KAAK,SAASQ,QAASA,EAApD,wBCmBSC,EAtBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,6BACGD,EAASE,KAAI,gBAAG7B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQ6B,EAAjB,EAAiBA,GAAjB,OACZ,oBAAahB,UAAWC,IAAEgB,SAA1B,SACE,cAAC,EAAD,CACE/B,KAAMA,EACNC,OAAQA,EACRwB,QAAS,kBAAMG,EAAgBE,OAJ1BA,S,gBCWAE,G,MAfA,SAAC,GAAyB,IAAvB3B,EAAsB,EAAtBA,MAAOgB,EAAe,EAAfA,SACvB,OACE,kCACG,IADH,wBAGE,uBAAOJ,KAAK,OAAOZ,MAAOA,EAAOgB,SAAUA,SCqElCY,E,4MAtEblC,MAAQ,CACN4B,SAAUO,EACVC,OAAQ,I,EAGVC,UAAYC,c,EAEZC,kBAAoB,SAAAC,GAKlB,GAJoB,EAAKxC,MAAM4B,SAC5BE,KAAI,SAAAW,GAAO,OAAIA,EAAQxC,QACvByC,SAASF,EAAWvC,MAGrB0C,MAAM,GAAD,OAAIH,EAAWvC,KAAf,gCACA,CACL,IAAM2C,EAAU,2BACXJ,GADW,IAEdT,GAAI,EAAKM,YAGX,EAAK9B,UAAS,gBAAGqB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAgBgB,U,EAK9Bf,gBAAkB,SAAAQ,GAChB,EAAK9B,UAAS,SAAAsC,GACZ,MAAO,CACLjB,SAAUiB,EAAUjB,SAASQ,QAAO,qBAAGL,KAAgBM,U,EAK7DS,mBAAqB,SAAAC,GACnB,EAAKxC,SAAS,CAAE6B,OAAQW,EAAY1C,cAAcC,S,EAGpD0C,mBAAqB,WACnB,MAA6B,EAAKhD,MAA1B4B,EAAR,EAAQA,SAEFqB,EAFN,EAAkBb,OAEcc,cAEhC,OAAOtB,EAASQ,QAAO,SAAAK,GAAO,OAC5BA,EAAQxC,KAAKiD,cAAcR,SAASO,O,4CAIxC,WACE,IAAQb,EAAWtB,KAAKd,MAAhBoC,OAEFe,EAAkBrC,KAAKkC,qBAE7B,OACE,sBAAKjC,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,CAAaH,SAAUE,KAAKyB,oBAE5B,cAAC,EAAD,CAAQjC,MAAO8B,EAAQd,SAAUR,KAAKgC,qBAEtC,0CACA,cAAC,EAAD,CACElB,SAAUuB,EACVtB,gBAAiBf,KAAKe,yB,GAhEdL,aCFlB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cd379731.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__BQ_B0\",\"listItem\":\"ContactList_listItem__3be7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"ContactForm_formGroup__1epe0\",\"form-group\":\"ContactForm_form-group__3niKn\",\"button\":\"ContactForm_button__VqtsV\"};","import React, { Component } from 'react';\nimport s from './ContactForm.module.css';\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputOnChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className={s.formGroup}>\n          <label>\n            Name{' '}\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleInputOnChange}\n            />\n          </label>\n\n          <label>\n            Number{' '}\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleInputOnChange}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactItem = ({ name, number, onClick }) => {\n  return (\n    <>\n      {name}: {number}\n      <button className={s.button} type=\"button\" onClick={onClick}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ol>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={s.listItem}>\n        <ContactItem\n          name={name}\n          number={number}\n          onClick={() => onDeleteContact(id)}\n        />\n      </li>\n    ))}\n  </ol>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.shape.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      {' '}\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport initialContacts from './data/contacts.json';\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from './components/Filter';\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  contactId = uuidv4();\n\n  formSubmitHandler = newContact => {\n    const similarName = this.state.contacts\n      .map(contact => contact.name)\n      .includes(newContact.name);\n\n    if (similarName) {\n      alert(`${newContact.name}is already in phonebook`);\n    } else {\n      const addContact = {\n        ...newContact,\n        id: this.contactId,\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, addContact],\n      }));\n    }\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  seachContactByName = contactName => {\n    this.setState({ filter: contactName.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"Container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <Filter value={filter} onChange={this.seachContactByName} />\n\n        <h2>Contacts</h2>\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}